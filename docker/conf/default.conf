
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {  
        listen       80; 
        listen [::]:80;
        client_max_body_size 50M;  
        set $my_host "172.16.64.181";
        # set $my_host "192.168.118.249";
        
        # set $my_host "192.168.120.73";

        location ~ ^/(websocket) {
            # 将WebSocket请求转发到指定的后端服务器，并设置一些HTTP头部
            proxy_pass http://$my_host:8381;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        #解决Router(mode: 'history')模式下，刷新路由地址不能找到页面的问题 
        location / { 
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $http_origin; # 必须要有
                add_header Access-Control-Allow-Headers *; # 必须要有
                add_header 'Access-Control-Allow-Methods' 'GET,OPTIONS,DELETE,POST,PUT';
                add_header Access-Control-Allow-Credentials true; # 不加也行
                return 200; # 204也可以，只要返回成功码即可
            }
            add_header 'Access-Control-Allow-Methods' 'GET,OPTIONS,DELETE,POST,PUT' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            proxy_pass http://$my_host:8380;
        }                

        access_log  /var/log/nginx/access.log; 
}

server {  
        listen 443 ssl;
        listen [::]:443 ssl;
        client_max_body_size 50M; 
         # HTTPS协议需要指定SSL证书和密钥
        ssl_certificate /etc/nginx/ssl/touchbiz.tech.pem;
        ssl_certificate_key /etc/nginx/ssl/touchbiz.tech.key;

        set $my_host "172.16.64.181";
        # set $my_host "192.168.1.5";
        # set $my_host "192.168.120.73";

       

        #解决Router(mode: 'history')模式下，刷新路由地址不能找到页面的问题 
        location / { 
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $http_origin; # 必须要有
                add_header Access-Control-Allow-Headers *; # 必须要有
                add_header 'Access-Control-Allow-Methods' 'GET,OPTIONS,DELETE,POST,PUT';
                add_header Access-Control-Allow-Credentials true; # 不加也行
                return 200; # 204也可以，只要返回成功码即可
            }
            add_header 'Access-Control-Allow-Methods' 'GET,OPTIONS,DELETE,POST,PUT' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            proxy_pass http://$my_host:8381;

            
        }      

         #解决Router(mode: 'history')模式下，刷新路由地址不能找到页面的问题 
        location ~ ^/(actuator|sys|online|monitor)/  { 
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $http_origin; # 必须要有
                add_header Access-Control-Allow-Headers *; # 必须要有
                add_header 'Access-Control-Allow-Methods' 'GET,OPTIONS,DELETE,POST,PUT';
                add_header Access-Control-Allow-Credentials true; # 不加也行
                return 200; # 204也可以，只要返回成功码即可
            }
            add_header 'Access-Control-Allow-Methods' 'GET,OPTIONS,DELETE,POST,PUT' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            proxy_pass http://$my_host:8381;
        }
                     
    

        location /api/temples/client/  { 
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin $http_origin; # 必须要有
                add_header Access-Control-Allow-Headers *; # 必须要有
                add_header 'Access-Control-Allow-Methods' 'GET,OPTIONS,DELETE,POST,PUT';
                add_header Access-Control-Allow-Credentials true; # 不加也行
                add_header 'Cache-Control' 'max-age=10800';
                return 200; # 204也可以，只要返回成功码即可
            }
            add_header 'Access-Control-Allow-Methods' 'GET,OPTIONS,DELETE,POST,PUT' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            proxy_pass http://$my_host:8380;
        }  

           
        location ~ ^/(websocket) {
            # 将WebSocket请求转发到指定的后端服务器，并设置一些HTTP头部
            proxy_pass http://$my_host:8381;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }


        access_log  /var/log/nginx/access.log; 
}
